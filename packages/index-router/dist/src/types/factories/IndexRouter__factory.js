"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexRouter__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        inputs: [],
        name: "WETH",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                ],
                internalType: "struct IIndexRouter.BurnParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "outputAsset",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.BurnQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.BurnSwapParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "burnSwap",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "outputAsset",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.BurnQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.BurnSwapParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "burnSwapValue",
        outputs: [
            {
                internalType: "uint256",
                name: "wethBalance",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "outputAsset",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.BurnQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.BurnSwapParams",
                name: "_params",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_deadline",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "_v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "_r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_s",
                type: "bytes32",
            },
        ],
        name: "burnSwapValueWithPermit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "outputAsset",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.BurnQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.BurnSwapParams",
                name: "_params",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_deadline",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "_v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "_r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_s",
                type: "bytes32",
            },
        ],
        name: "burnSwapWithPermit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_index",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "burnTokensAmount",
        outputs: [
            {
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                ],
                internalType: "struct IIndexRouter.BurnParams",
                name: "_params",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_deadline",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "_v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "_r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_s",
                type: "bytes32",
            },
        ],
        name: "burnWithPermit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_WETH",
                type: "address",
            },
            {
                internalType: "address",
                name: "_registry",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amountInBase",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                ],
                internalType: "struct IIndexRouter.MintParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "mint",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "inputToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amountInInputToken",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "asset",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.MintQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.MintSwapParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "mintSwap",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "inputToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amountInInputToken",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "asset",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.MintQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.MintSwapParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "mintSwapIndexAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "asset",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.MintQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.MintSwapValueParams",
                name: "_params",
                type: "tuple",
            },
        ],
        name: "mintSwapValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "index",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "inputToken",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amountInInputToken",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "asset",
                                type: "address",
                            },
                            {
                                internalType: "address",
                                name: "swapTarget",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "buyAssetMinAmount",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "assetQuote",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct IIndexRouter.MintQuoteParams[]",
                        name: "quotes",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IIndexRouter.MintSwapParams",
                name: "_params",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_deadline",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "_v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "_r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "_s",
                type: "bytes32",
            },
        ],
        name: "mintSwapWithPermit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "registry",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
var IndexRouter__factory = /** @class */ (function () {
    function IndexRouter__factory() {
    }
    IndexRouter__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IndexRouter__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IndexRouter__factory.abi = _abi;
    return IndexRouter__factory;
}());
exports.IndexRouter__factory = IndexRouter__factory;
//# sourceMappingURL=IndexRouter__factory.js.map